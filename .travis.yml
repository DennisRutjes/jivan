language: go

go:
  - "1.8"
  - "1.9"
  - "1.10"
  - master

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Don't email me the results of the test runs.
notifications:
  email: false

env:
  # This is the version of github.com/golang/dep to use.
  - DEP_VERSION="0.4.1"

before_install:
  # Download the binary to bin folder in $GOPATH
  - curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o $GOPATH/bin/dep
  # Make the binary executable
  - chmod +x $GOPATH/bin/dep

install:
  - dep ensure

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  # - go get github.com/golang/lint/golint                        # Linter
  # - go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  # - go get github.com/fzipp/gocyclo

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - go build -o go-wfs main.go
  - go build -tags awslambda -o go-wfs-awslambda main.go
  - go test -v ./...
  # - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  # - go test -v -race ./...                   # Run all the tests with the race detector enabled
  # - go vet ./...                             # go vet is the official Go static analyzer
  # - megacheck ./...                          # "go vet on steroids" + linter
  # - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  # - golint -set_exit_status $(go list ./...) # one last linte

deploy:
  provider: releases
  api_key:
    secure: K3wdPRVqCKclA046izmzCWbkgSn+/UgPAdhGhsOXYGm3nycphWF1sh1sAwx/hyUNLG/uA72kEvWMwZsXjbF+Y5nILUCThPTHn82rREiRFMSOhIWOyZKIzrgWa0EFlN7Pap0bcVwLYh8HB6iI2HB3tEnA78FtSVTB0PiE7RJLKzqOcQGqhxhB+TmcgMVpZO/0Zu2Xnwb55tL3CQytdj+qpVmJdGqxCT/YmZVjtYdYZ2cKi23/Ut++F4xKjR1FHhaG2VtU1h5gAI0N7ox/dtzuCvBlXlWc/BdYXhYAwG0Lkiybj5IKA1dUdx3SeJPCSyI107Q6jpFRFsWlo0FyqpQFqnO2XLVCn74VCgJWdpfwgIWxN0lfWjnEhB86b9xuae3iuAJPOnHmAxbs9NY0fwkjyRtHCY8DURRXhWiw1wk869XDYiavOeshY29UIaGHULQO16vXXZjWxxHHA32HCrrOggkAzshOKqAtZTE0wWq2zqJJFFAIiAdMNpLK51Nir7ZKfepjgy+y1f8YrVfm7jQlIHKZPBtcB466A8NZeBnvQLsM68a4HJtwW2QVHbju9edSD7U1NLluTqU8R1WZvLzJJ12ITQTLRCcInIy0wyodHDm37Cw2kRgNam41XjNG1O/exw/x4t18PlYdgW43umPecQu8zuTOFNjWP6m3yixuwFs=
  file:
    - go-wfs
    - go-wfs-awslambda
  skip_cleanup: true
  on:
    tags: true
